{
    "Rx BC Email Event.Rx BC Timestamp": [
        {
            "test_case": "Valid Input - Current Date",
            "description": "Testing with the current date.",
            "expected_result": "Pass",
            "input": "2024-10-27"
        },
        {
            "test_case": "Valid Input - Past Date",
            "description": "Testing with a date in the past.",
            "expected_result": "Pass",
            "input": "2023-01-15"
        },
        {
            "test_case": "Valid Input - Future Date",
            "description": "Testing with a date in the future.",
            "expected_result": "Pass",
            "input": "2025-12-31"
        },
        {
            "test_case": "Valid Input - Leap Year",
            "description": "Testing with a date in a leap year.",
            "expected_result": "Pass",
            "input": "2024-02-29"
        },
        {
            "test_case": "Valid Input - Boundary - Min Date",
            "description": "Testing with the earliest possible date (adjust as needed).",
            "expected_result": "Pass",
            "input": "1900-01-01"
        },
        {
            "test_case": "Valid Input - Boundary - Max Date",
            "description": "Testing with the latest possible date (adjust as needed).",
            "expected_result": "Pass",
            "input": "2099-12-31"
        },
        {
            "test_case": "Invalid Input - Null",
            "description": "Testing with a null value.",
            "expected_result": "Fail",
            "input": null
        },
        {
            "test_case": "Invalid Input - Empty String",
            "description": "Testing with an empty string.",
            "expected_result": "Fail",
            "input": ""
        },
        {
            "test_case": "Invalid Input - Invalid Date Format",
            "description": "Testing with an invalid date format (e.g., MM/DD/YYYY).",
            "expected_result": "Fail",
            "input": "10/27/2024"
        },
        {
            "test_case": "Invalid Input - Invalid Day",
            "description": "Testing with an invalid day (e.g., Feb 30).",
            "expected_result": "Fail",
            "input": "2024-02-30"
        },
        {
            "test_case": "Invalid Input - Invalid Month",
            "description": "Testing with an invalid month.",
            "expected_result": "Fail",
            "input": "2024-13-01"
        },
        {
            "test_case": "Invalid Input - Non-numeric characters",
            "description": "Testing with non-numeric characters in the date.",
            "expected_result": "Fail",
            "input": "2024-10-a7"
        },
        {
            "test_case": "Invalid Input - Too many characters",
            "description": "Testing with too many characters in the date.",
            "expected_result": "Fail",
            "input": "2024-10-27-12"
        },
        {
            "test_case": "Invalid Input -  Too few characters",
            "description": "Testing with too few characters in the date.",
            "expected_result": "Fail",
            "input": "2024-10"
        },
        {
            "test_case": "Invalid Input -  Special Characters",
            "description": "Testing with special characters in the date.",
            "expected_result": "Fail",
            "input": "2024-10-27!"
        }
    ],
    "Rx BC Email Event.Rx BC User Group": [
        {
            "test_case": "Valid Input - Alphanumeric",
            "description": "Valid input with alphanumeric characters.",
            "expected_result": "Pass",
            "input": "GroupA123"
        },
        {
            "test_case": "Valid Input - Special Characters Allowed",
            "description": "Valid input with allowed special characters (e.g., underscore, hyphen).",
            "expected_result": "Pass",
            "input": "Group_A-123"
        },
        {
            "test_case": "Valid Input - Long String",
            "description": "Valid input with a string exceeding average length (e.g., 255 characters).",
            "expected_result": "Pass",
            "input": "ThisIsALongStringThatExceedsTheAverageLengthOfAGroupNameToTestBoundaryConditionsThisIsALongStringThatExceedsTheAverageLengthOfAGroupNameToTestBoundaryConditions"
        },
        {
            "test_case": "Valid Input - Short String",
            "description": "Valid input with a short string (e.g., single character).",
            "expected_result": "Pass",
            "input": "A"
        },
        {
            "test_case": "Invalid Input - Null",
            "description": "Input is NULL, violating NOT NULL constraint.",
            "expected_result": "Fail",
            "input": null
        },
        {
            "test_case": "Invalid Input - Empty String",
            "description": "Input is an empty string, violating NOT EMPTY constraint.",
            "expected_result": "Fail",
            "input": ""
        },
        {
            "test_case": "Invalid Input - Only Spaces",
            "description": "Input contains only spaces, effectively empty.",
            "expected_result": "Fail",
            "input": "   "
        },
        {
            "test_case": "Invalid Input - Leading/Trailing Spaces",
            "description": "Input with leading and trailing spaces.",
            "expected_result": "Fail",
            "input": "  Group Name  "
        },
        {
            "test_case": "Invalid Input - Unallowed Special Characters",
            "description": "Input contains unallowed special characters (e.g., <, >, &, etc.).",
            "expected_result": "Fail",
            "input": "Group<Name>"
        },
        {
            "test_case": "Boundary Condition - Maximum Length",
            "description": "Input string at the maximum allowed length (assuming a reasonable maximum).",
            "expected_result": "Pass",
            "input": "ThisIsAStringOfMaximumLengthThatNeedsToBeDefinedAccordingToTheSystemConstraints"
        },
        {
            "test_case": "Boundary Condition - Exceeding Maximum Length",
            "description": "Input string exceeding the maximum allowed length (assuming a reasonable maximum).",
            "expected_result": "Fail",
            "input": "ThisIsAStringOfMaximumLengthThatNeedsToBeDefinedAccordingToTheSystemConstraintsAndThisExceedsItByQuiteABit"
        },
        {
            "test_case": "Edge Case - Unicode Characters",
            "description": "Input containing Unicode characters.",
            "expected_result": "Pass",
            "input": "\u30b0\u30eb\u30fc\u30d7\u540d"
        }
    ]
}