{
  "Rx BC Demographics.Rx BC Email": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid email address",
      "expected_result": "Pass",
      "input": "test@example.com"
    },
    {
      "test_case": "TC002_Valid_LongEmail",
      "description": "Valid email address with long local part",
      "expected_result": "Pass",
      "input": "verylongusername1234567890@example.com"
    },
    {
      "test_case": "TC003_Valid_PlusSign",
      "description": "Valid email address with plus sign",
      "expected_result": "Pass",
      "input": "user+alias@example.com"
    },
    {
      "test_case": "TC004_Invalid_NoAtSymbol",
      "description": "Invalid email address - missing @ symbol",
      "expected_result": "Fail",
      "input": "test.example.com"
    },
    {
      "test_case": "TC005_Invalid_NoDomain",
      "description": "Invalid email address - missing domain",
      "expected_result": "Fail",
      "input": "test@"
    },
    {
      "test_case": "TC006_Invalid_SpecialChars",
      "description": "Invalid email address - special characters in local part",
      "expected_result": "Fail",
      "input": "test!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?@example.com"
    },
    {
      "test_case": "TC007_Invalid_MultipleAtSymbols",
      "description": "Invalid email address - multiple @ symbols",
      "expected_result": "Fail",
      "input": "test@example@com"
    },
    {
      "test_case": "TC008_Null_Input",
      "description": "Null input",
      "expected_result": "Fail",
      "input": null
    },
    {
      "test_case": "TC009_Empty_Input",
      "description": "Empty string input",
      "expected_result": "Fail",
      "input": ""
    },
    {
      "test_case": "TC010_Boundary_Max_Length",
      "description": "Email address at maximum length (assuming a limit of 254 characters)",
      "expected_result": "Pass",
      "input": "averyveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryverylongusername@example.com"
    },
    {
      "test_case": "TC011_Edge_Case_UnusualDomain",
      "description": "Email address with unusual domain",
      "expected_result": "Pass",
      "input": "test@123.com"
    },
    {
      "test_case": "TC012_Edge_Case_NumbersOnlyDomain",
      "description": "Email address with numbers only domain",
      "expected_result": "Pass",
      "input": "test@1234567.com"
    },
    {
      "test_case": "TC013_Type_Validation_Number",
      "description": "Input is a number instead of a string",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC014_Type_Validation_Boolean",
      "description": "Input is a boolean instead of a string",
      "expected_result": "Fail",
      "input": true
    }
  ],
  "Rx BC Demographics.Rx BC First Name": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid input test",
      "expected_result": "Pass",
      "input": "John"
    },
    {
      "test_case": "TC002_Valid_LongName",
      "description": "Valid input with a long name",
      "expected_result": "Pass",
      "input": "JohnathanChristopherSmith"
    },
    {
      "test_case": "TC003_Valid_SpecialCharacters",
      "description": "Valid input with special characters allowed (e.g., apostrophe)",
      "expected_result": "Pass",
      "input": "O'Malley"
    },
    {
      "test_case": "TC004_Invalid_Null",
      "description": "Null input",
      "expected_result": "Fail",
      "input": null
    },
    {
      "test_case": "TC005_Invalid_Empty",
      "description": "Empty string input",
      "expected_result": "Fail",
      "input": ""
    },
    {
      "test_case": "TC006_Invalid_Whitespace",
      "description": "Input with only whitespace",
      "expected_result": "Fail",
      "input": "   "
    },
    {
      "test_case": "TC007_Invalid_NumbersOnly",
      "description": "Input with only numbers",
      "expected_result": "Fail",
      "input": "12345"
    },
    {
      "test_case": "TC008_Invalid_SpecialCharacters",
      "description": "Input with disallowed special characters",
      "expected_result": "Fail",
      "input": "Johnathan&^%$#@!"
    },
    {
      "test_case": "TC009_Boundary_Maxlength",
      "description": "Input at the maximum length (assuming a reasonable limit)",
      "expected_result": "Pass",
      "input": "JohnathanChristopherSmithJr"
    },
    {
      "test_case": "TC010_Boundary_MinLength",
      "description": "Input at the minimum length (assuming a minimum of 1)",
      "expected_result": "Pass",
      "input": "A"
    },
    {
      "test_case": "TC011_Edge_UnusualCharacters",
      "description": "Input with unusual characters (e.g., accents)",
      "expected_result": "Pass",
      "input": "Jo\u00e3o"
    },
    {
      "test_case": "TC012_Type_Number",
      "description": "Input is a number",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC013_Type_Boolean",
      "description": "Input is a boolean",
      "expected_result": "Fail",
      "input": true
    }
  ],
  "Rx BC Demographics.Rx BC Last Name": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid input test",
      "expected_result": "Pass",
      "input": "Smith"
    },
    {
      "test_case": "TC002_Valid_LongName",
      "description": "Valid input with a long last name",
      "expected_result": "Pass",
      "input": "Supercalifragilisticexpialidocious"
    },
    {
      "test_case": "TC003_Valid_NameWithApostrophe",
      "description": "Valid input with an apostrophe",
      "expected_result": "Pass",
      "input": "O'Malley"
    },
    {
      "test_case": "TC004_Valid_NameWithHyphen",
      "description": "Valid input with a hyphen",
      "expected_result": "Pass",
      "input": "Smith-Jones"
    },
    {
      "test_case": "TC005_Invalid_Null",
      "description": "Null input test",
      "expected_result": "Fail",
      "input": null
    },
    {
      "test_case": "TC006_Invalid_Empty",
      "description": "Empty string input test",
      "expected_result": "Fail",
      "input": ""
    },
    {
      "test_case": "TC007_Invalid_Whitespace",
      "description": "Whitespace only input test",
      "expected_result": "Fail",
      "input": "   "
    },
    {
      "test_case": "TC008_Invalid_NumbersOnly",
      "description": "Numbers only input test",
      "expected_result": "Fail",
      "input": "12345"
    },
    {
      "test_case": "TC009_Invalid_SpecialCharacters",
      "description": "Input with special characters",
      "expected_result": "Fail",
      "input": "!@#$%^&*()"
    },
    {
      "test_case": "TC010_Invalid_TooLong",
      "description": "Input exceeding maximum length (assuming a reasonable limit)",
      "expected_result": "Fail",
      "input": "ThisIsAVeryVeryVeryVeryVeryLongLastNameThatExceedsTheMaximumAllowedLength"
    },
    {
      "test_case": "TC011_Invalid_Type_Number",
      "description": "Input of incorrect data type (number)",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC012_Invalid_Type_Boolean",
      "description": "Input of incorrect data type (boolean)",
      "expected_result": "Fail",
      "input": true
    }
  ],
  "Rx BC Email Event.Rx BC Email": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid input test",
      "expected_result": "Pass",
      "input": "test@example.com"
    },
    {
      "test_case": "TC002_Valid_LongEmail",
      "description": "Valid input with a long email address",
      "expected_result": "Pass",
      "input": "verylongtest1234567890@example.com"
    },
    {
      "test_case": "TC003_Valid_EmailWithPlus",
      "description": "Valid input with plus sign in email",
      "expected_result": "Pass",
      "input": "test+alias@example.com"
    },
    {
      "test_case": "TC004_Invalid_Null",
      "description": "Null input test",
      "expected_result": "Fail",
      "input": null
    },
    {
      "test_case": "TC005_Invalid_Empty",
      "description": "Empty string input test",
      "expected_result": "Fail",
      "input": ""
    },
    {
      "test_case": "TC006_Invalid_Whitespace",
      "description": "Input with only whitespace",
      "expected_result": "Fail",
      "input": "   "
    },
    {
      "test_case": "TC007_Invalid_MissingAt",
      "description": "Invalid email - missing @ symbol",
      "expected_result": "Fail",
      "input": "test.example.com"
    },
    {
      "test_case": "TC008_Invalid_MissingDomain",
      "description": "Invalid email - missing domain",
      "expected_result": "Fail",
      "input": "test@"
    },
    {
      "test_case": "TC009_Invalid_InvalidChars",
      "description": "Invalid email - contains invalid characters",
      "expected_result": "Fail",
      "input": "test!@example.com"
    },
    {
      "test_case": "TC010_Invalid_TooLong",
      "description": "Email exceeding reasonable length limit",
      "expected_result": "Fail",
      "input": "ThisIsAVeryVeryVeryVeryVeryVeryVeryLongEmailAddressThatExceedsAnyReasonableLimit@example.com"
    },
    {
      "test_case": "TC011_Invalid_Number",
      "description": "Input is a number instead of a string",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC012_Invalid_SpecialCharsOnly",
      "description": "Input contains only special characters",
      "expected_result": "Fail",
      "input": "!@#$%^&*()"
    }
  ],
  "Rx BC Email Event.Rx BC Email Template Info": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid input test with a short string",
      "expected_result": "Pass",
      "input": "Test Email Template"
    },
    {
      "test_case": "TC002_Valid_LongString",
      "description": "Valid input test with a long string (near maximum length)",
      "expected_result": "Pass",
      "input": "This is a long string to test the maximum length allowed for the Rx BC Email Template Info field. It should be long enough to test boundary conditions without exceeding any limits."
    },
    {
      "test_case": "TC003_Valid_SpecialChars",
      "description": "Valid input test with special characters",
      "expected_result": "Pass",
      "input": "Test!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?"
    },
    {
      "test_case": "TC004_Invalid_Number",
      "description": "Invalid input test with a number",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC005_Null_Input",
      "description": "Null input test",
      "expected_result": "Pass",
      "input": null
    },
    {
      "test_case": "TC006_Empty_String",
      "description": "Empty string input test",
      "expected_result": "Pass",
      "input": ""
    },
    {
      "test_case": "TC007_Boundary_Max_Length",
      "description": "Input at the maximum allowed length (assuming a hypothetical limit of 255 characters)",
      "expected_result": "Pass",
      "input": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    },
    {
      "test_case": "TC008_Edge_OnlySpaces",
      "description": "Input containing only spaces",
      "expected_result": "Pass",
      "input": "                                                                         "
    },
    {
      "test_case": "TC009_Invalid_Emoji",
      "description": "Input containing emojis (assuming emojis are not allowed)",
      "expected_result": "Fail",
      "input": "This is a test with an emoji: \ud83d\ude02"
    },
    {
      "test_case": "TC010_Invalid_ControlChars",
      "description": "Input containing control characters (assuming control characters are not allowed)",
      "expected_result": "Fail",
      "input": "This is a test with a control character: \\u0000"
    }
  ],
  "Rx BC Email Event.Rx BC Event ID": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid input test",
      "expected_result": "Pass",
      "input": "ABC12345"
    },
    {
      "test_case": "TC002_Valid_Alphanumeric",
      "description": "Valid alphanumeric input",
      "expected_result": "Pass",
      "input": "EventID123"
    },
    {
      "test_case": "TC003_Valid_LongString",
      "description": "Valid input with maximum length (assuming a reasonable limit)",
      "expected_result": "Pass",
      "input": "ThisIsALongEventIDWithMaximumLengthOf50Characters"
    },
    {
      "test_case": "TC004_Invalid_Null",
      "description": "Null input",
      "expected_result": "Fail",
      "input": null
    },
    {
      "test_case": "TC005_Invalid_Empty",
      "description": "Empty string input",
      "expected_result": "Fail",
      "input": ""
    },
    {
      "test_case": "TC006_Invalid_Whitespace",
      "description": "String with only whitespace",
      "expected_result": "Fail",
      "input": "   "
    },
    {
      "test_case": "TC007_Invalid_SpecialChars",
      "description": "String with special characters",
      "expected_result": "Fail",
      "input": "Event!@#$%^&*()"
    },
    {
      "test_case": "TC008_Invalid_NumericOnly",
      "description": "Numeric only input",
      "expected_result": "Fail",
      "input": "1234567890"
    },
    {
      "test_case": "TC009_Invalid_TooLong",
      "description": "String exceeding maximum length (assuming a reasonable limit)",
      "expected_result": "Fail",
      "input": "ThisStringIsWayTooLongAndExceedsTheMaximumAllowableLengthForThisField"
    },
    {
      "test_case": "TC010_Invalid_Type",
      "description": "Incorrect data type (number)",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC011_Invalid_Type",
      "description": "Incorrect data type (boolean)",
      "expected_result": "Fail",
      "input": true
    }
  ],
  "Rx BC Email Event.Rx BC Event Type": [
    {
      "test_case": "TC001_Valid_CREATE_NEW_USER",
      "description": "Valid input: CREATE_NEW_USER",
      "expected_result": "Pass",
      "input": "CREATE_NEW_USER"
    },
    {
      "test_case": "TC002_Valid_CREATE_MIGRATING_USER",
      "description": "Valid input: CREATE_MIGRATING_USER",
      "expected_result": "Pass",
      "input": "CREATE_MIGRATING_USER"
    },
    {
      "test_case": "TC003_Invalid_Wrong_Case",
      "description": "Invalid input: Incorrect casing",
      "expected_result": "Fail",
      "input": "create_new_user"
    },
    {
      "test_case": "TC004_Invalid_Extra_Space",
      "description": "Invalid input: Extra spaces",
      "expected_result": "Fail",
      "input": "CREATE_NEW_USER "
    },
    {
      "test_case": "TC005_Invalid_Typo",
      "description": "Invalid input: Typo in the value",
      "expected_result": "Fail",
      "input": "CREATE_NEw_USER"
    },
    {
      "test_case": "TC006_Invalid_Different_Value",
      "description": "Invalid input: Different value",
      "expected_result": "Fail",
      "input": "UPDATE_USER"
    },
    {
      "test_case": "TC007_Null_Input",
      "description": "Null input",
      "expected_result": "Fail",
      "input": null
    },
    {
      "test_case": "TC008_Empty_String",
      "description": "Empty string input",
      "expected_result": "Fail",
      "input": ""
    },
    {
      "test_case": "TC009_Boundary_Max_Length",
      "description": "Input at the maximum length (assuming no length limit)",
      "expected_result": "Pass",
      "input": "CREATE_NEW_USER"
    },
    {
      "test_case": "TC010_Edge_Case_Special_Chars",
      "description": "Input with special characters",
      "expected_result": "Fail",
      "input": "CREATE_NEW_USER!"
    },
    {
      "test_case": "TC011_Type_Validation_Number",
      "description": "Input of wrong type (number)",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC012_Type_Validation_Boolean",
      "description": "Input of wrong type (boolean)",
      "expected_result": "Fail",
      "input": true
    }
  ],
  "Rx BC Email Event.Rx BC New User Registration Link": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid input test",
      "expected_result": "Pass",
      "input": "https://example.com/register"
    },
    {
      "test_case": "TC002_Valid_LongURL",
      "description": "Valid input with a long URL",
      "expected_result": "Pass",
      "input": "https://www.example.com/averylonglinkthatshouldstillbevalidbecauseitiswithincharacterlimits/register"
    },
    {
      "test_case": "TC003_Invalid_Empty",
      "description": "Empty string input",
      "expected_result": "Fail",
      "input": ""
    },
    {
      "test_case": "TC004_Invalid_Null",
      "description": "Null input",
      "expected_result": "Fail",
      "input": null
    },
    {
      "test_case": "TC005_Invalid_Whitespace",
      "description": "String with only whitespace",
      "expected_result": "Fail",
      "input": "   "
    },
    {
      "test_case": "TC006_Invalid_ShortURL",
      "description": "URL shorter than minimum length (if any)",
      "expected_result": "Pass",
      "input": "http://example.com"
    },
    {
      "test_case": "TC007_Invalid_SpecialChars",
      "description": "String with special characters that might not be allowed",
      "expected_result": "Pass",
      "input": "https://example.com/register?param=~!@#$%^&*()_+=-`[]\\{}|;':\",./<>?"
    },
    {
      "test_case": "TC008_Invalid_NonURL",
      "description": "Input that is not a valid URL",
      "expected_result": "Fail",
      "input": "this is not a url"
    },
    {
      "test_case": "TC009_Invalid_TooLong",
      "description": "URL exceeding maximum length (if any)",
      "expected_result": "Fail",
      "input": "https://www.example.com/averyveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryverylonglinkthatshouldbeinvalidbecauseitiswaybeyondcharacterlimits/register"
    },
    {
      "test_case": "TC010_Invalid_Number",
      "description": "Numeric input",
      "expected_result": "Fail",
      "input": 12345
    }
  ],
  "Rx BC Email Event.Rx BC Timestamp": [
    {
      "test_case": "TC006_Null_Input",
      "description": "Null input",
      "expected_result": "Pass",
      "input": null
    }
  ],
  "Rx BC Email Event.Rx BC User Group": [
    {
      "test_case": "TC001_Valid_Basic",
      "description": "Basic valid input test with a short string",
      "expected_result": "Pass",
      "input": "Group A"
    },
    {
      "test_case": "TC002_Valid_LongString",
      "description": "Valid input test with a long string (near maximum length)",
      "expected_result": "Pass",
      "input": "ThisIsALongStringForTheRxBCUserGroupFieldToTestMaximumLength"
    },
    {
      "test_case": "TC003_Valid_AlphanumericString",
      "description": "Valid input test with alphanumeric characters",
      "expected_result": "Pass",
      "input": "Group123"
    },
    {
      "test_case": "TC004_Valid_SpecialCharacters",
      "description": "Valid input test with special characters (if allowed)",
      "expected_result": "Pass",
      "input": "Group-A_1"
    },
    {
      "test_case": "TC005_Invalid_TooLong",
      "description": "Invalid input test with a string exceeding the maximum length (if applicable)",
      "expected_result": "Fail",
      "input": "ThisIsAnExcessivelyLongStringThatShouldExceedTheMaximumLengthForTheRxBCUserGroupField"
    },
    {
      "test_case": "TC006_Invalid_NumericOnly",
      "description": "Invalid input test with only numeric characters (if not allowed)",
      "expected_result": "Fail",
      "input": "12345"
    },
    {
      "test_case": "TC007_Invalid_SpecialCharactersOnly",
      "description": "Invalid input test with only special characters (if not allowed)",
      "expected_result": "Fail",
      "input": "!@#$%^&*()"
    },
    {
      "test_case": "TC008_Null",
      "description": "Null input test",
      "expected_result": "Pass",
      "input": null
    },
    {
      "test_case": "TC009_Empty",
      "description": "Empty string input test",
      "expected_result": "Pass",
      "input": ""
    },
    {
      "test_case": "TC010_WhitespaceOnly",
      "description": "Whitespace only input test",
      "expected_result": "Pass",
      "input": "   "
    },
    {
      "test_case": "TC011_Type_Number",
      "description": "Type validation test with a number",
      "expected_result": "Fail",
      "input": 123
    },
    {
      "test_case": "TC012_Type_Boolean",
      "description": "Type validation test with a boolean",
      "expected_result": "Fail",
      "input": true
    },
    {
      "test_case": "TC013_Type_Array",
      "description": "Type validation test with an array",
      "expected_result": "Fail",
      "input": [
        1,
        2,
        3
      ]
    },
    {
      "test_case": "TC014_Type_Object",
      "description": "Type validation test with an object",
      "expected_result": "Fail",
      "input": {
        "a": 1
      }
    }
  ]
}